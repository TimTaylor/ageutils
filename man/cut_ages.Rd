% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cut_ages.R
\name{cut_ages}
\alias{cut_ages}
\title{Cut integer age vectors}
\usage{
cut_ages(ages, breaks, max_upper = Inf)
}
\arguments{
\item{ages}{\verb{[numeric]}.

Vector of age in years.

Double values are coerced to integer prior to categorisation / aggregation.

\code{ages} >= 200 are not permitted due to the internal implementation and the
fact that we have yet to encounter a 200 year old, living, individual.}

\item{breaks}{\verb{[integerish]}.

1 or more non-negative cut points in increasing (strictly) order.

These correspond to the left hand side of the desired intervals (e.g. the
closed side of [x, y).

Double values are coerced to integer prior to categorisation.}

\item{max_upper}{\verb{[numeric]}

Represents the maximum upper bound for the resulting intervals.

Defaults to \code{Inf}.}
}
\value{
A data frame with an ordered factor column (\code{interval}), as well as columns
corresponding to the explicit bounds (\code{lower_bound} and \code{upper_bound}).
}
\description{
\code{cut_ages()} provides categorisation of ages based on specified breaks
which represent the left-hand interval limits. The resulting intervals span
from the minimum break through to a specified \code{max_upper} and will always be
closed on the left and open on the right. Ages below the minimum break, or
above \code{max_upper} will be returned as NA.
}
\examples{

cut_ages(ages = 0:9, breaks = c(0L, 3L, 5L, 10L))

cut_ages(ages = 0:9, breaks = 5L)

# Note the following is comparable to a call to
# cut(ages, right = FALSE, breaks = c(breaks, Inf))
ages <- seq.int(from = 0, by = 10, length.out = 10)
breaks <- c(0, 1, 10, 30)
cut_ages(ages, breaks)

# values below the minimum break and above max_upper treated as NA
cut_ages(ages = 0:10, breaks = 5, max_upper = 7)

}
